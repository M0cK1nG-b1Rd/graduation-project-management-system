<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.gms.gms.dao.AppliedSubjectMapper">
    <update id="auditAppliedSubject" parameterType="com.gms.gms.domain.AppliedSubject">
        UPDATE applied_subject
        SET `STATUS` = #{appliedSubject.status}
        WHERE ID = #{appliedSubject.id}
          AND STU_ID = #{appliedSubject.studentId}
          AND SUB_ID = #{appliedSubject.subId}
          AND `STATUS` = 'WSH';
    </update>


    <select id="selectWithCondition" resultMap="AppliedSubjectMapper">
        SELECT a.ID,
               a.SUB_ID,
               s.SUB_NAME,
               s.POSE_BY    AS TEACHER_ID,
               u2.REAL_NAME AS TEACHER_NAME,
               a.STU_ID     AS STUDENT_ID,
               u1.REAL_NAME AS STUDENT_NAME,
               a.APPLY_TIME,
               a.APPLY_REASON,
               a.`STATUS`,
               a.FEEDBACK,
               a.AUDIT_TIME,
               f.DOC_ID,
               f.FILE_ID,
               f.FILE_NAME

        FROM applied_subject a
                 JOIN `subject` s ON (a.SUB_ID = s.SUB_ID)
                 JOIN student stu ON (stu.STU_ID = a.STU_ID)
                 JOIN USER u1 ON (u1.USER_ID = stu.USER_ID)
                 JOIN teacher t ON (t.TEACHER_ID = s.POSE_BY)
                 JOIN USER u2 ON (u2.USER_ID = t.USER_ID)
                 LEFT JOIN file_storage f ON (f.DOC_ID = a.DOC_ID)
# 需要加上hadninId，对接时解决
    </select>
    <select id="selectWithConditionAsTeacher" resultMap="AppliedSubjectMapper">
        SELECT a.ID,
               a.SUB_ID,
               s.SUB_NAME,
               s.POSE_BY    AS TEACHER_ID,
               u2.REAL_NAME AS TEACHER_NAME,
               a.STU_ID     AS STUDENT_ID,
               u1.REAL_NAME AS STUDENT_NAME,
               a.APPLY_TIME,
               a.APPLY_REASON,
               a.`STATUS`,
               a.FEEDBACK,
               a.AUDIT_TIME,
               f.DOC_ID,
               f.FILE_ID,
               f.FILE_NAME

        FROM applied_subject a
                 JOIN `subject` s ON (a.SUB_ID = s.SUB_ID)
                 JOIN student stu ON (stu.STU_ID = a.STU_ID)
                 JOIN USER u1 ON (u1.USER_ID = stu.USER_ID)
                 JOIN teacher t ON (t.TEACHER_ID = s.POSE_BY)
                 JOIN USER u2 ON (u2.USER_ID = t.USER_ID)
                 LEFT JOIN file_storage f ON (f.DOC_ID = a.DOC_ID)
        WHERE s.POSE_BY = #{teacherId}
    </select>
    <select id="selectWithConditionAsStudent" resultMap="AppliedSubjectMapper">
        SELECT a.ID,
               a.SUB_ID,
               s.SUB_NAME,
               s.POSE_BY    AS TEACHER_ID,
               u2.REAL_NAME AS TEACHER_NAME,
               a.STU_ID     AS STUDENT_ID,
               u1.REAL_NAME AS STUDENT_NAME,
               a.APPLY_TIME,
               a.APPLY_REASON,
               a.`STATUS`,
               a.FEEDBACK,
               a.AUDIT_TIME,
               f.DOC_ID,
               f.FILE_ID,
               f.FILE_NAME

        FROM applied_subject a
                 JOIN `subject` s ON (a.SUB_ID = s.SUB_ID)
                 JOIN student stu ON (stu.STU_ID = a.STU_ID)
                 JOIN USER u1 ON (u1.USER_ID = stu.USER_ID)
                 JOIN teacher t ON (t.TEACHER_ID = s.POSE_BY)
                 JOIN USER u2 ON (u2.USER_ID = t.USER_ID)
                 LEFT JOIN file_storage f ON (f.DOC_ID = a.DOC_ID)
        WHERE a.STU_ID = #{studentId}
    </select>
    <select id="getStudentsInSubject" resultType="com.gms.gms.domain.Student">
        SELECT
            s.STU_ID,
            u.USER_ID,
            u.REAL_NAME,
            u.GENDER,
            u.TEL,
            u.MAIL,
            co.COLLEGE_NAME,
            m.MAJOR_NAME,
            cl.CLASS_NAME
        FROM
            student s
                JOIN `user` u ON ( u.USER_ID = s.USER_ID )
                JOIN college co ON s.COLLEGE_ID = co.COLLEGE_ID
                JOIN major m ON s.MAJOR_ID = m.MAJOR_ID
                JOIN class cl ON s.CLASS_ID = cl.CLASS_ID
        WHERE
                STU_ID IN ( SELECT STU_ID FROM applied_subject WHERE `STATUS` = 'YTG' AND SUB_ID = #{subId} )
    </select>
    <select id="getStudentsOfTeacher" resultType="com.gms.gms.domain.Student">
        SELECT
            s.STU_ID,
            sub.SUB_NAME,
            u.USER_ID,
            u.REAL_NAME,
            u.GENDER,
            u.TEL,
            u.MAIL,
            co.COLLEGE_NAME,
            m.MAJOR_NAME,
            cl.CLASS_NAME
        FROM
            student s
                JOIN applied_subject a ON(a.STU_ID = s.STU_ID AND a.`STATUS` = 'YTG')
                JOIN `subject` sub ON(a.SUB_ID=sub.SUB_ID)
                JOIN `user` u ON ( u.USER_ID = s.USER_ID )
                JOIN college co ON s.COLLEGE_ID = co.COLLEGE_ID
                JOIN major m ON s.MAJOR_ID = m.MAJOR_ID
                JOIN class cl ON s.CLASS_ID = cl.CLASS_ID
        WHERE
            sub.POSE_BY=#{teacherId}
    </select>


    <resultMap id="AppliedSubjectMapper" type="com.gms.gms.domain.AppliedSubject">
        <result column="ID" property="id" jdbcType="INTEGER"/>
        <result column="SUB_ID" property="subId" jdbcType="INTEGER"/>
        <result column="SUB_NAME" property="subName" jdbcType="VARCHAR"/>
        <result column="TEACHER_ID" property="teacherId" jdbcType="INTEGER"/>
        <result column="TEACHER_NAME" property="teacherName" jdbcType="VARCHAR"/>
        <result column="STUDENT_ID" property="studentId" jdbcType="INTEGER"/>
        <result column="STUDENT_NAME" property="studentName" jdbcType="VARCHAR"/>
        <result column="APPLY_TIME" property="applyTime" jdbcType="DATE"/>
        <result column="APPLY_REASON" property="applyReason" jdbcType="VARCHAR"/>
        <result column="STATUS" property="status" jdbcType="VARCHAR"/>
        <result column="FEEDBACK" property="feedback" jdbcType="VARCHAR"/>
        <result column="AUDIT_TIME" property="auditTime" jdbcType="DATE"/>
        <collection property="fileStorage" ofType="com.gms.gms.domain.FileStorage">
            <result column="DOC_ID" property="docId"/>
            <result column="FILE_NAME" property="fileName" jdbcType="VARCHAR"/>
            <result column="FILE_ID" property="fileId" jdbcType="INTEGER"/>
        </collection>
    </resultMap>
</mapper>
